<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.info.baymax</groupId>
		<artifactId>baymax-dsp-access</artifactId>
		<version>0.1.6-SNAPSHOT</version>
	</parent>
	<artifactId>baymax-dsp-access-consumer</artifactId>

	<name>baymax-dsp-access-consumer</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.runtime.startClass>com.info.baymax.dsp.access.consumer.DspConsumerStarter</project.runtime.startClass>

		<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
		<swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-dsp-data-sys</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-dsp-data-platform</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-dsp-data-consumer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-cloud-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-webflux-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.info.baymax</groupId>
			<artifactId>baymax-persistence-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- docs dependencies -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-webtestclient</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-webflux</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-staticdocs</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.github.swagger2markup</groupId>
			<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.info.baymax</groupId>
					<artifactId>baymax-common-native</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<defaultGoal>install</defaultGoal>
		<directory>${project.basedir}/target</directory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgument>-parameters</compilerArgument>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<fork>true</fork>
					<verbose>true</verbose>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeArtifactIds>
								lombok,spring-boot-devtools,spring-boot-configuration-processor
							</excludeArtifactIds>
							<includeScope>compile</includeScope>
							<outputDirectory>target/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${project.runtime.startClass}</mainClass>
							<classpathPrefix>lib/</classpathPrefix>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestEntries>
							<Class-Path />
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
						<io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}
						</io.springfox.staticdocs.snippetsOutputDir>
					</systemPropertyVariables>
					<includes>
						<include>**/Swagger2MarkupTest.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-import-files-ext</artifactId>
						<version>${swagger2markup.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
						<version>${swagger2markup.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<skip>${skipApiDocs}</skip>
					<swaggerInput>${swagger.input}</swaggerInput>
					<outputDir>${generated.asciidoc.directory}</outputDir>
					<config>
						<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
						<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
						<swagger2markup.extensions.dynamicOverview.contentPath>
							${project.basedir}/src/docs/asciidoc/extensions/overview
						</swagger2markup.extensions.dynamicOverview.contentPath>
						<swagger2markup.extensions.dynamicDefinitions.contentPath>
							${project.basedir}/src/docs/asciidoc/extensions/definitions
						</swagger2markup.extensions.dynamicDefinitions.contentPath>
						<swagger2markup.extensions.dynamicPaths.contentPath>
							${project.basedir}/src/docs/asciidoc/extensions/paths
						</swagger2markup.extensions.dynamicPaths.contentPath>
						<swagger2markup.extensions.dynamicSecurity.contentPath>
							${project.basedir}src/docs/asciidoc/extensions/security/
						</swagger2markup.extensions.dynamicSecurity.contentPath>
						<swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}
						</swagger2markup.extensions.springRestDocs.snippetBaseUri>
						<swagger2markup.extensions.springRestDocs.defaultSnippets>true
						</swagger2markup.extensions.springRestDocs.defaultSnippets>
					</config>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>convertSwagger2markup</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.3</version>
					</dependency>
				</dependencies>
				<configuration>
					<skip>${skipApiDocs}</skip>
					<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
					<sourceDocumentName>index.adoc</sourceDocumentName>
					<attributes>
						<doctype>book</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered />
						<hardbreaks />
						<sectlinks />
						<sectanchors />
						<generated>${generated.asciidoc.directory}</generated>
					</attributes>
				</configuration>
				<executions>
					<execution>
						<id>output-html</id>
						<phase>test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>output-pdf</id>
						<phase>test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- copy the generated documents -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${asciidoctor.html.output.directory}</directory>
								</resource>
								<resource>
									<directory>${asciidoctor.pdf.output.directory}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.graalvm.nativeimage</groupId>
				<artifactId>native-image-maven-plugin</artifactId>
				<configuration>
					<skip>${spring.native.skip}</skip>
					<imageName>${project.artifactId}</imageName>
					<mainClass>${project.runtime.startClass}</mainClass>
					<buildArgs>
						<buildArg>-Dspring.native.verbose=true</buildArg>
						<buildArg>-Dspring.graal.remove-unused-autoconfig=true</buildArg>
						<buildArg>-Dspring.graal.remove-yaml-support=true</buildArg>
						<!-- <buildArg>-H:+JNI</buildArg> -->
						<buildArg>-H:+ReportExceptionStackTraces</buildArg>
						<buildArg>-H:+ReportUnsupportedElementsAtRuntime</buildArg>
						<buildArg>-H:TraceClassInitialization=true</buildArg>
						<buildArg>-H:+RemoveSaturatedTypeFlows</buildArg>
						<buildArg>-H:ConfigurationFileDirectories=target/config</buildArg>
						<buildArg>-J-Xmx8G</buildArg>
						<buildArg>-R:MinHeapSize=1G</buildArg>
						<buildArg>-R:MaxHeapSize=8g</buildArg>
						<buildArg>-R:MaxNewSize=512m</buildArg>
						<buildArg>--static</buildArg>
						<buildArg>--no-fallback</buildArg>
						<buildArg>--allow-incomplete-classpath</buildArg>

						<!-- trace-class -->
						<buildArg>--trace-class-initialization=java.sql.DriverManager</buildArg>
						<buildArg>--trace-class-initialization=org.apache.commons.logging.LogFactory</buildArg>
						<buildArg>--trace-class-initialization=ch.qos.logback.classic.spi.PackagingDataCalculator</buildArg>
						<buildArg>--trace-class-initialization=sun.instrument.InstrumentationImpl</buildArg>
						<buildArg>--trace-class-initialization=org.springframework.util.unit.DataSize</buildArg>
						<buildArg>--trace-class-initialization=ch.qos.logback.core.status.InfoStatus</buildArg>

						<!-- build-time -->
						<buildArg>--initialize-at-build-time=org.apache.commons.logging.LogFactory</buildArg>
						<buildArg>--initialize-at-build-time=sun.instrument.InstrumentationImpl</buildArg>
						<buildArg>--initialize-at-build-time=org.springframework.util.unit.DataSize</buildArg>
						<buildArg>--initialize-at-build-time=ch.qos.logback</buildArg>
						<buildArg>--initialize-at-build-time=org.slf4j</buildArg>

						<!-- run-time -->
						<buildArg>--initialize-at-run-time=com.mysql.fabric.jdbc.FabricMySQLDriver</buildArg>
						<buildArg>--initialize-at-run-time=sun.nio.ch.WindowsAsynchronousFileChannelImpl,sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder</buildArg>
						<buildArg>--initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger</buildArg>
					</buildArgs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>native-image</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
