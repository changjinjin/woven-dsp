<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.info.baymax</groupId>
		<artifactId>baymax-parent</artifactId>
		<version>0.1.6-SNAPSHOT</version>
	</parent>
	<artifactId>baymax-sentinel-dashboard</artifactId>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.runtime.startClass>com.alibaba.csp.sentinel.dashboard.DashboardApplication</project.runtime.startClass>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-web-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-transport-simple-http</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-parameter-flow-control</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-api-gateway-adapter-common</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore-nio</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- for Nacos rule publisher sample -->
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-datasource-nacos</artifactId>
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- for Apollo rule publisher sample -->
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-openapi</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>

		<!--for Zookeeper rule publisher sample -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-autoconfigure</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-rules</artifactId>
			<version>1.16.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.info.baymax</groupId>
					<artifactId>baymax-common-native</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<defaultGoal>install</defaultGoal>
		<directory>${project.basedir}/target</directory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp/</directory>
				<excludes>
					<exclude>resources/node_modules/**</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgument>-parameters</compilerArgument>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<fork>true</fork>
					<verbose>true</verbose>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${project.runtime.startClass}</mainClass>
							<classpathPrefix>../lib</classpathPrefix>
							<addClasspath>false</addClasspath>
						</manifest>
						<manifestEntries>
							<Class-Path />
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>/*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.graalvm.nativeimage</groupId>
				<artifactId>native-image-maven-plugin</artifactId>
				<configuration>
					<skip>${spring.native.skip}</skip>
					<imageName>${project.artifactId}</imageName>
					<mainClass>${project.runtime.startClass}</mainClass>
					<buildArgs>
						<buildArg>-Dspring.native.verbose=true</buildArg>
						<buildArg>-Dspring.graal.remove-unused-autoconfig=true</buildArg>
						<buildArg>-Dspring.graal.remove-yaml-support=true</buildArg>
						<!-- <buildArg>-H:+JNI</buildArg> -->
						<buildArg>-H:+ReportExceptionStackTraces</buildArg>
						<buildArg>-H:+ReportUnsupportedElementsAtRuntime</buildArg>
						<buildArg>-H:TraceClassInitialization=true</buildArg>
						<buildArg>-H:+RemoveSaturatedTypeFlows</buildArg>
						<buildArg>-H:ConfigurationFileDirectories=target/config</buildArg>
						<buildArg>-J-Xmx8G</buildArg>
						<buildArg>-R:MinHeapSize=1G</buildArg>
						<buildArg>-R:MaxHeapSize=8g</buildArg>
						<buildArg>-R:MaxNewSize=512m</buildArg>
						<buildArg>--static</buildArg>
						<buildArg>--no-fallback</buildArg>
						<buildArg>--allow-incomplete-classpath</buildArg>

						<!-- trace-class -->
						<buildArg>--trace-class-initialization=java.sql.DriverManager</buildArg>
						<buildArg>--trace-class-initialization=org.apache.commons.logging.LogFactory</buildArg>
						<buildArg>--trace-class-initialization=ch.qos.logback.classic.spi.PackagingDataCalculator</buildArg>
						<buildArg>--trace-class-initialization=sun.instrument.InstrumentationImpl</buildArg>

						<!-- build-time -->
						<buildArg>--initialize-at-build-time=org.apache.commons.logging.LogFactory</buildArg>
						<buildArg>--initialize-at-build-time=sun.instrument.InstrumentationImpl</buildArg>

						<!-- run-time -->
						<buildArg>--initialize-at-run-time=com.mysql.fabric.jdbc.FabricMySQLDriver</buildArg>
						<buildArg>--initialize-at-run-time=sun.nio.ch.WindowsAsynchronousFileChannelImpl,sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder</buildArg>
					</buildArgs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>native-image</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
